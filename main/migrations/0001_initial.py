# Generated by Django 4.1 on 2022-08-10 17:01

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='OptDbseikeimdrcrossout',
            fields=[
                ('ctlno', models.CharField(db_column='CTLNO', max_length=100, primary_key=True, serialize=False)),
                ('itmcd', models.CharField(db_column='ITMCD', max_length=20)),
                ('lotno', models.CharField(db_column='LOTNO', max_length=20)),
                ('grsqty', models.IntegerField(db_column='GRSQTY')),
                ('molder', models.IntegerField(db_column='MOLDER')),
                ('encoder', models.CharField(db_column='ENCODER', max_length=20)),
                ('inputdate', models.DateTimeField(db_column='INPUTDATE')),
                ('moldrej', models.IntegerField(db_column='MOLDREJ')),
                ('machineno', models.CharField(db_column='MachineNo', max_length=100)),
                ('moldno', models.CharField(db_column='MOLDNO', max_length=100)),
                ('batchno', models.CharField(db_column='BATCHNO', max_length=100)),
                ('remarks', models.CharField(db_column='REMARKS', max_length=100)),
                ('ovenstatus', models.CharField(db_column='OVENSTATUS', max_length=100)),
                ('control_status', models.IntegerField(db_column='Control_Status')),
            ],
            options={
                'db_table': 'opt_dbseikeimdrcrossout',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OptItemmastermain',
            fields=[
                ('itemid', models.BigAutoField(db_column='ItemID', primary_key=True, serialize=False)),
                ('itemno', models.CharField(db_column='ItemNo', max_length=50)),
                ('specificmat', models.CharField(db_column='SpecificMat', max_length=50)),
                ('molditemno', models.CharField(db_column='MoldItemNo', max_length=50)),
                ('moldno', models.CharField(db_column='MoldNo', max_length=50)),
                ('moldowner', models.CharField(db_column='MoldOwner', max_length=100)),
                ('moldsetup', models.CharField(db_column='MoldSetUp', max_length=3)),
                ('partno', models.CharField(db_column='PartNo', max_length=50)),
                ('partname', models.CharField(db_column='PartName', max_length=200)),
                ('customer', models.CharField(db_column='Customer', max_length=200)),
                ('status', models.CharField(db_column='Status', max_length=50)),
                ('producer', models.CharField(db_column='Producer', max_length=50)),
                ('mixtureno', models.CharField(db_column='MixtureNo', max_length=50)),
                ('materialtype', models.CharField(db_column='MaterialType', max_length=50)),
                ('kg_shift', models.FloatField(db_column='KG_Shift')),
                ('materiallayin', models.FloatField(db_column='MaterialLayin')),
                ('cmno', models.CharField(db_column='CMNo', max_length=16)),
                ('cmsupplier', models.CharField(db_column='CMSupplier', max_length=100)),
                ('machinetype', models.CharField(db_column='MachineType', max_length=50)),
                ('harvestingmethod', models.CharField(db_column='HarvestingMethod', max_length=100)),
                ('orignoofcavities', models.IntegerField(db_column='OrigNoOfCavities')),
                ('actualnoofcavities', models.IntegerField(db_column='ActualNoOfCavities')),
                ('noshot_shift', models.IntegerField(db_column='NoShot_Shift')),
                ('quantityshift', models.IntegerField(db_column='QuantityShift')),
                ('subpartmoldowner', models.CharField(db_column='SubpartMoldOwner', max_length=100)),
                ('subpartsno', models.CharField(db_column='SubpartsNo', max_length=50)),
                ('subpartqty', models.IntegerField(db_column='SubpartQty')),
                ('subpartsupplier', models.CharField(db_column='SubpartSupplier', max_length=200)),
                ('adhesiveuse', models.CharField(db_column='AdhesiveUse', max_length=500)),
                ('oven', models.CharField(db_column='Oven', max_length=10)),
                ('specialprocess', models.CharField(db_column='SpecialProcess', max_length=50)),
                ('subcon_wc', models.CharField(db_column='SubCon_WC', max_length=50)),
                ('subconremarks', models.CharField(db_column='SubConRemarks', max_length=200)),
                ('finishing1speed', models.CharField(db_column='Finishing1Speed', max_length=100)),
                ('finishing2speed', models.CharField(db_column='Finishing2Speed', max_length=100)),
                ('finishing3speed', models.CharField(db_column='Finishing3Speed', max_length=100)),
                ('finishing4speed', models.CharField(db_column='Finishing4Speed', max_length=100)),
                ('inspection1speed', models.CharField(db_column='Inspection1Speed', max_length=100)),
                ('inspection2speed', models.CharField(db_column='Inspection2Speed', max_length=100)),
                ('inspection3speed', models.CharField(db_column='Inspection3Speed', max_length=100)),
                ('inspection4speed', models.CharField(db_column='Inspection4Speed', max_length=100)),
                ('assemblyspeed', models.CharField(db_column='AssemblySpeed', max_length=100)),
                ('specialprocspeed', models.CharField(db_column='SpecialProcSpeed', max_length=100)),
                ('packingspeed', models.CharField(db_column='PackingSpeed', max_length=100)),
                ('productwt', models.CharField(db_column='ProductWT', max_length=100)),
                ('typeofplastic', models.CharField(db_column='TypeofPlastic', max_length=100)),
                ('quantityplastic', models.CharField(db_column='QuantityPlastic', max_length=100)),
                ('packagingtype', models.CharField(db_column='PackagingType', max_length=100)),
                ('quantitybox', models.IntegerField(db_column='QuantityBox')),
                ('sameproduct', models.CharField(db_column='SameProduct', max_length=200)),
                ('use_notuse', models.IntegerField(db_column='Use_NotUse')),
                ('inputdate', models.DateTimeField(db_column='InputDate')),
                ('status_o', models.CharField(db_column='STATUS_O', max_length=100)),
                ('washing', models.CharField(db_column='WASHING', max_length=100)),
                ('noofshotperbucket', models.IntegerField(db_column='NoOfShotPerBucket')),
                ('samplingsize', models.CharField(db_column='SamplingSize', max_length=50)),
                ('specialqtybox', models.CharField(db_column='SpecialQtyBox', max_length=100)),
                ('motheritemno', models.CharField(db_column='MotherItemNo', max_length=20)),
                ('finishing1process', models.CharField(db_column='Finishing1Process', max_length=100)),
                ('finishing2process', models.CharField(db_column='Finishing2Process', max_length=100)),
                ('finishing3process', models.CharField(db_column='Finishing3Process', max_length=100)),
                ('finishing4process', models.CharField(db_column='Finishing4Process', max_length=100)),
                ('inspection1process', models.CharField(db_column='Inspection1Process', max_length=100)),
                ('inspection2process', models.CharField(db_column='Inspection2Process', max_length=100)),
                ('inspection3process', models.CharField(db_column='Inspection3Process', max_length=100)),
                ('inspection4process', models.CharField(db_column='Inspection4Process', max_length=100)),
                ('weightperbox', models.DecimalField(db_column='WeightPerBox', decimal_places=3, max_digits=9)),
                ('weightpertube', models.DecimalField(db_column='WeightPerTube', decimal_places=3, max_digits=9)),
                ('qtypertube', models.IntegerField(db_column='QtyPerTube')),
            ],
            options={
                'db_table': 'opt_itemmastermain',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tboperatorlist',
            fields=[
                ('recordnum', models.BigAutoField(primary_key=True, serialize=False)),
                ('employee', models.CharField(max_length=100)),
                ('id', models.CharField(max_length=50)),
                ('dept', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'tboperatorlist',
                'managed': False,
            },
        ),
    ]
